v2 <- c(5,2,7,3,3,1,6,3,2)
m2 <- matrix(v2, 3,3 )
solve(m2)
v <- c(1,2,7,3,3,1,6,3,2)
v2 <- c(5,2,7,3,3,1,6,3,2)
m <- matrix(v,3,3)
m2 <- matrix(v2,3,3)
cMat <- makeCacheMatrix(m)
cMat$getinverse()
cMat2 <- cacheSolve(cMat)
cMat$getinverse()
cMat3 <- cacheSolve(cMat)
cMat$getinverse()
makeCacheMatrix <- function(x = matrix()){
inv <- NULL
set <- function(y){
x <<- y
inv <<- NULL
}
get <- function() x
setinverse <- function(inverse) inv <<- inverse
getinverse <- function() inv
list(set=set, get=get, setinverse=setinverse, getinverse=getinverse )
}
cacheSolve <- function(x, ...){
## Return a matrix that is the inverse of 'x'
inverse <- x$getinverse()
if(!is.null(inverse)){
message("using cached data")
return(inverse)
}
data <- x$get()
inverse <- solve(data, ...)
x$setinverse(inverse)
inverse
}
cMat <- makeCacheMatrix(m)
cMat$getinverse()
cMat2 <- cacheSolve(cMat)
cMat$getinverse()
cMat3 <- cacheSolve(cMat)
cMat$getinverse()
cMat$set(m2)
cMat$getinverse()
cMat4 <- cacheSolve(cMat)
cMat$getinverse()
cMat5 <- cacheSolve(cMat)
cMat$getinverse()
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5 +7
x
y <- x - 3
y
c(1.1,9,3.14)
z <- c(1.1,9,3.14)
?c
z
z <- c(555,z)
c(z, 555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by=0.5)
my_seq <- seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times =40)
rep(c(0,1,2),times=10)
rep(c(0,1,2), each = 10)
?qpois
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2*x+e
summary(y)
plot(x,y)
x <- rbinom(100,1,0.5)
y <- 0.5 + 2*x+e
set.seed(10)
x <- rbinom(100,1,0.5)
e <- rnorm(100,0,2)
y <- 0.5 + 2*x+e
summary(y)
plot(x,y)
set.seed(10)
x <- rbinom(10,10,0.5)
e <- rnorm(10,0,20)
y <- 0.5 + 2*x + e
plot(x,y)
?Poisson
set.seed(1)
x <- rnorm(100)
log.mu <- 0.5 + 0.3*x
y <- rpois(100, exp(log.mu))
summary(y)
plot(x,y
)
setwd("~/Coursera/Coursera_GetCleanData/Week1")
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile="./data/cameras.csv", method="curl")
list.files("./data")
download.file(fileUrl, destfile="./data/cameras.csv")
download.file(fileUrl, destfile="./data/cameras.csv")
list.files("./data")
dateDownloaded <- date()
dateDownloaded
cameraData <- read.table("./data/cameras.csv", sep=",", header=TRUE)
head(cameraData)
head(cameraData)
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD"
download.file(fileUrl, destfile="./data/cameras.xlsx")
dateDownloaded <- date()
library(xlsx)
library("xlsx")
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("rJava")
library(rJava)
library(xlsx)
